import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import logic.Model;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import org.hibernate.mapping.Map;
import org.jboss.weld.exceptions.InvalidObjectException;

@WebServlet(urlPatterns = "/get")
public class ServletList extends HttpServlet {

    Model model = Model.getInstance();

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {
        response.setContentType("text/html;charset=utf-8");
        PrintWriter pw = responce.getWriter();

        int id = Integer.parseInt(request.getParameter("id"));

        if (id == 0) {
            pw.print("<html>" +
                    "<h3>Достпуные пользователи:</h3><br/>" +
                    "ID пользователя: " +
                    "<ul>");

            for (Map.Entry<Integer, User> entry : model.getFromList().entrySet()) {
                pw.print("<li>" + entry.getKey() + "</li>" +
                        "<ul>" +
                        "<li>Имя:" + entry.getValue().getName + "</li>" +
                        "<li>Фамилия:" + entry.getValue().getSurname + "</li>" +
                        "<li>Зарплата:" + entry.getValue().getSalary + "</li>" +
                        "</ul>")
            }
            pw.print("</ul" +
                    "<a href=\'Index.jsp\'>Домой</a>" +
                    "</html>");
        } else if (id > 0) {
            if (id > model.getFromList().size()) {
                pw.print("<html>" +
                        "<h3>Такого пользователя нет :(</h3>" +
                        "<a href=\'Index.jsp\'>Домой</a>" +
                        "</html>");
            } else {
                pw.print("<html>" +
                        "<h3>Запрошеный пользователь</h3>" +
                        "<br/>" +
                        "<li>Имя:" + model.getFromList().get(id).getName + "<br/>" +
                        "<li>Фамилия:" + model.getFromList().get(id).getSurname + "<br/>" +
                        "<li>Зарплата:" + model.getFromList().get(id).getSalary + "<br/>" +
                        "<a href=\'Index.jsp\'>Домой</a>" +
                        "</html>");
            } else{
                pw.print("<html>" +
                        "<h3>ID должен быть больше нуля!(</h3>" +
                        "<a href=\'Index.jsp\'>Домой</a>" +
                        "</html>");
            }
        }
    }
}
