package com.example.servletStart;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import logic.Dataset;
import logic.Model;
import logic.User;

@WebServlet(
    urlPatterns = {"/put"}
)
public class ServletPut extends HttpServlet {
    Model model = Model.getInstance();
    Gson gson = (new GsonBuilder()).setPrettyPrinting().create();

    public ServletPut() {
    }

    protected void doPut(HttpServletRequest request, HttpServletResponse response) throws IOException {
        request.setCharacterEncoding("UTF-8");
        response.setContentType("application/json;charset=utf-8");
        StringBuffer sb = new StringBuffer();
        PrintWriter pw = response.getWriter();

        try {
            BufferedReader reader = request.getReader();

            String line;
            while((line = reader.readLine()) != null) {
                sb.append(line);
            }
        } catch (Exception var14) {
            System.out.println("ERROR");
        }

        JsonObject jObj = (JsonObject)this.gson.fromJson(String.valueOf(sb), JsonObject.class);
        int id = jObj.get("id").getAsInt();
        String name = jObj.get("name").getAsString();
        String surname = jObj.get("surname").getAsString();
        double salary = jObj.get("salary").getAsDouble();
        Dataset dataset;
        if (id > 0) {
            if (id > this.model.getFromList().size()) {
                dataset = new Dataset();
                dataset.code = "INTERNAL_ERROR";
                dataset.message = "Пользователя с таким ID не существует!";
                pw.print(this.gson.toJson(dataset));
            } else {
                this.model.delete(id);
                User user = new User(name, surname, salary);
                this.model.add(user, id);
                Dataset dataset = new Dataset();
                dataset.message = "Пользователя с ID - " + id + " изменен!";
                pw.print(this.gson.toJson(dataset));
            }
        } else {
            dataset = new Dataset();
            dataset.code = "INTERNAL_ERROR";
            dataset.message = "Id должен быть больше 0!";
            pw.print(this.gson.toJson(dataset));
        }

    }
}
